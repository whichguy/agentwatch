name: AgentWatch
# File-targeted agent monitoring system with pattern matching
# Usage: @agent-watch <pattern> <agent> <args> in PR or file comments
# 
# Pattern Examples:
#   *.js                 - all JavaScript files
#   src/**/*.ts          - all TypeScript files under src/
#   test-*.js            - files matching test-*.js
#   {app,lib}/*.js       - JS files in app/ or lib/ directories
#
# Commands in Pull Requests:
#   @agent-watch [options] <pattern> <agent> [@ <agent-args>] - Start watching files
#   @agent-unwatch <agent> <pattern>                          - Exclude pattern for agent
#   @agent-list                                                - Show all patterns/exclusions
#
# Commands in Issues:
#   @agent-run <agent> [@ <args>]                             - Run agent in issue context
#
# The @ separator allows distinguishing agentwatch options from agent arguments:
#   @agent-watch --persist *.js echo @ --verbose --debug
#   (--persist is for agentwatch, --verbose --debug go to the echo agent)
#
# Agents can be loaded from:
#   1. Your repo: .github/agents/<agent>.js
#   2. Built-in agents: echo, security, lint
#   3. Well-known repo: github.com/agentwatch/agents

on:
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]
  issues:
    types: [opened]
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  agentwatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm init -y
          npm install @octokit/rest

      - name: Run AgentWatch
        uses: actions/github-script@v7
        with:
          script: |
            const { handleAgentWatch } = require('./.github/scripts/agentwatch.js');
            await handleAgentWatch(context, github);